---
- hosts: all
  tasks:

  - name: Register system to satellite and repos
    include_role:
      name: register-system
    tags:
      - register


  - name: Install postgresql 95
    yum:
      name:
        - rh-postgresql95
        - rh-postgresql95-postgresql-contrib
      state: latest
    tags:
      - install-postgres

  - name: Install Docker
    yum:
      name: docker 
      state: latest
    tags:
      - install-docker

  - name: Start and enable docker 
    systemd:
      name: docker 
      state: started
      enabled: yes
    tags:
      - start-docker

  - name: Enable firewalld ports for postgresql 
    firewalld:
      port: "{{ item }}"
      permanent: yes
      state: enabled
      zone: public
    with_items:
      - 8443/tcp
      - 80/tcp
      - 443/tcp
    notify:
      - reload-firewall
    tags:
      - firewalld

  - name: Create env file on target
    template:
      src: mysql-env-file
      dest: ~/mysql-env-file
    tags:
      - deploy-mysql-container
      - deploy-mysql-env-file

 # - name: Total garbage method of deploying mysql container
 #   command: "docker run \
 #   --detach \
 #   --restart=always \
 #   --env MYSQL_ROOT_PASSWORD={{ MYSQL_ROOT_PASSWORD }} \
 #   --env MYSQL_USER={{ MYSQL_USER }} \
 #   --env MYSQL_PASSWORD={{ MYSQL_PASSWORD }} \
 #   --env MYSQL_DATABASE={{ MYSQL_DATABASE }} \
 #   --name {{ MYSQL_CONTAINER_NAME }} \
 #   --privileged=true \
 #   --publish 3306:3306 \
 #   -v /var/lib/mysql:/var/lib/mysql/data:Z \
 #   registry.access.redhat.com/rhscl/mysql-57-rhel7"
 #   tags:
 #     - deploy-mysql-container

  - name: Create /var/lib/mysql
    file:
      path: /var/lib/mysql
      state: directory
      mode: '0777'
    tags:
      - deploy-mysql-container
    
  - name: Install python-docker-py and mysql-python on target
    yum:
      name: 
        - python-docker-py
        - MySQL-python
      state: latest
    tags:
      - deploy-mysql-container

  - name: Deploy mysql container
    docker_container:
      env_file: "~/mysql-env-file"
      detach: yes
      restart: yes
      name: "{{ MYSQL_CONTAINER_NAME }}"
      privileged: yes
      published_ports: 3306:3306
      volumes: /var/lib/mysql:/var/lib/mysql/data:Z
      image: "registry.access.redhat.com/rhscl/mysql-57-rhel7"
    tags:
      - deploy-mysql-container

  - name: Ensure that the mysql container is running and quay db exists
    mysql_db:
      name: "{{ MYSQL_DATABASE }}"
      state: present
      login_host: 127.0.0.1
      login_user: root
      login_password: "{{ MYSQL_ROOT_PASSWORD }}"
    tags:
      - deploy-mysql-container
      - test-mysql-db

  - name: Create /var/lib/redis
    file:
      path: /var/lib/redis
      state: directory
      mode: '0777'
    tags:
      - deploy-redis-container

  - name: Deploy Redis container
    docker_container:
      detach: yes
      restart: yes
      name: "redis"
      privileged: yes
      published_ports: 6379:6379
      volumes: /var/lib/redis:/var/lib/redis/data:Z
      image: "registry.access.redhat.com/rhscl/redis-32-rhel7"
    tags:
      - deploy-redis-container

  - name: Test if Redis is up and talking
    shell: printf "PING\r\n" | nc localhost 6379
    tags:
      - deploy-redis-container

  - name: Start quay in config mode
    docker_container:
      detach: yes
      restart: no
      name: "quay-config"
      privileged: yes
      published_ports: "{{ QUAY_CONFIG_PORT }}:8443"
      image: "quay.io/redhat/quay:v3.1.3"
      command: "config {{ QUAY_CONFIG_PASSWORD }}"
    tags:
      - deploy-quay-config

  - name: Debug the stored variable
    debug:
      var: inventory_hostname
    tags:
      - deploy-quay-config

  - name: "Go login to quay host on port {{ QUAY_CONFIG_PORT }}"
    debug:
      msg: "Login to {{ inventory_hostname }}:{{ QUAY_CONFIG_PORT }} using username quayconfig and password {{ QUAY_CONFIG_PASSWORD }}"
    tags:
      - deploy-quay-config

  - name: "Setup configuration options in quay config"
    debug:
      msg: "1) Select mysql database option. 2) Fill out the fields with the following data. Database Server = {{ inventory_hostname }}, Username = {{ MYSQL_USER }}, Password = {{ MYSQL_PASSWORD }}, Database Name = {{ MYSQL_DATABASE }}, SSL certificate can be left blank for testing"
    tags:
      - deploy-quay-config

  - name: "Final config settings"
    debug:
      msg: "At a minimum configure Server Hostname ({{ inventory_hostname }}) and Redis hostname ({{ inventory_hostname }}). Then click Save configuration changes and make sure that the configuration is validated. Download the configuration file and save it at <think of something here>"
    tags:
      - deploy-quay-config

#------------------ End of quay config portion ------------------------#

  - name: Ensure that quay config is stopped
    docker_container:
      name: quay-config
      state: stopped
    tags:
      - deploy-quay

  - name: "Create quay config directory"
    file:
      state: directory
      path: /mnt/quay/config 
    tags:
      - deploy-quay
  
  - name: "Create quay storage directory (when object storage is not available)"
    file:
      state: directory
      path: /mnt/quay/storage
    when: not QUAY_OBJECT_STORAGE 
    tags:
      - deploy-quay

  - name: Copy the tarball to the quay host
    unarchive:
      src: "{{ QUAY_CONFIG_TAR }}"
      dest: /mnt/quay/config/
      copy: yes
    tags:
      - deploy-quay

  - name: Start quay
    docker_container:
      detach: yes
      restart: yes
      name: "quay"
      privileged: yes
      sysctls:
        - net.core.somaxconn=4096
      published_ports: 
        - "{{ QUAY_HTTP_PORT }}:8080"
        - "{{ QUAY_HTTPS_PORT }}":8443
      image: "quay.io/redhat/quay:v3.1.3"
      volumes:
        - /mnt/quay/config:/conf/stack:Z
        - /mnt/quay/storage:/datastorage:Z
      command: "config {{ QUAY_CONFIG_PASSWORD }}"
    tags:
      - deploy-quay-config  

  handlers:

  - name: reload-firewall
    command: firewall-cmd --reload


  
